//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
   : TForm(Owner)
{
}
//---------------------------------------------------------------------------
//солнечные лучики
  int SunRays[11][4] = {
    {358, 116, 358, 141}, //луч №1
    {292,  74, 319,  75}, //луч №2
    {296,  35, 329,  53},
    {327,  98, 299, 117},
    {338, 112, 329, 129},
    {378, 110, 390, 126},
    {359,  33, 359,  14}, //...
    {384,  43, 399,  26},
    {337,  38, 333,  29},
    {398,  93, 419, 103},
    {396,  54, 411,  45}  //луч №11
                        };

  //облако №1
  int Cloud0[11][4] = {
    {331, 71, 536,  94}, //эллипс №1
    {366, 81, 409,  58}, //эллипс №2
    {405, 83, 469,  48},
    {448, 59, 481,  79},
    {422, 64, 538,  89},
    {371, 66, 352,  80}, //...
    {514, 85, 550,  75},
    {392, 64, 418,  55},
    {345, 98, 389,  79},
    {531, 96, 459,  78},
    {392, 81, 464, 103}  //эллипс №11
                      };

  //облако №2
  int Cloud1[7][4] = {
    { 49,  75, 241, 104}, // эллипс №1
    { 96,  59, 162,  94}, // эллипс №2
    { 84,  82, 108,  69},
    {154,  69, 194,  82}, //...
    {148,  63, 174,  73},
    {157, 111, 213,  93},
    {111,  89,  57, 106}  // эллипс №7
                     };

  //координаты вершин трапеции, изображающей дорогу
  TPoint Road[4] = {
    Point(250, 250),
    Point(205, 380),
    Point(410, 380),
    Point(330, 250)
                   };

  //координаты прямоугольника, изображающего землю
  TRect Earth = Rect(0, 250, 550, 380);
  //координаты прямоугольников, изображающих деревья на горизонте
  //слева и справа от дороги
  TRect TreesL = Rect(0, 235, 250, 250);
  TRect TreesR = Rect(330, 235, 550, 250);

void __fastcall TForm1::FormPaint(TObject *Sender)
{
//обработчик события OnPaint. Вызывается, когда программа должна
//обновить изображение
  TRect r;
  int i;

    //Солнце
    Canvas->Brush->Color = RGB(255,255,0); //кисть - желтого цвета
    Canvas->Pen->Color = RGB(255,255,0);   //перо - желтого цвета
    Canvas->Pen->Width = 1;                //толщина пера - 1 точка
    Canvas->Ellipse(309, 30, 407, 123);    //нарисуем круг
    Canvas->Pen->Width = 5;
    //нарисуем лучи
    for (i = 0; i <=10; i++)
      {
         Canvas->MoveTo(SunRays[i][0], SunRays[i][1]);
         Canvas->LineTo(SunRays[i][2], SunRays[i][3]);
      }

    //облака
    Canvas->Brush->Color = clWhite; //кисть - белого цвета
    Canvas->Pen->Color = clWhite;   //перо - белого цвета
    Canvas->Pen->Width = 1;         //толщина пера - 1 точка

    //нарисуем эллипсы, из которых состоит первое облако
    for (i = 0; i < 11; i++)
      Canvas->Ellipse(Cloud0[i][0], Cloud0[i][1], Cloud0[i][2], Cloud0[i][3]);

    //нарисуем эллипсы, из которых состоит второе облако
    for (i = 0; i < 7; i++)
      Canvas->Ellipse(Cloud1[i][0], Cloud1[i][1], Cloud1[i][2], Cloud1[i][3]);
   //земля
    Canvas->Pen->Color = RGB(0,90,0); //перо - темно-зеленое
    Canvas->Brush->Color = RGB(0,90,0); //кисть - темно-зеленая
    Canvas->FillRect(Earth);

    //деревья на горизонте слева и справа от дороги
    Canvas->Pen->Color = RGB(0,120,0); //перо - светло-зеленое
    Canvas->Brush->Color = RGB(0,120,0); //кисть - светло-зеленая
    Canvas->FillRect(TreesL); Canvas->FillRect(TreesR);

    //асфальтированная дорога
    Canvas->Pen->Color = clGray; //перо серого цвета
    Canvas->Brush->Color = clGray; //кисть серого цвета
    Canvas->Polygon(Road,4);

    //белая разделительная полоса
    Canvas->Pen->Color = clWhite;
    Canvas->Pen->Style = psDash; //пунктирная линия
    Canvas->MoveTo((Road[0].x + Road[3].x) / 2,(Road[0].y + Road[3].y) / 2);
    Canvas->LineTo((Road[1].x + Road[2].x) / 2,(Road[1].y + Road[2].y) / 2);
    Canvas->MoveTo((Road[0].x + Road[3].x) / 2 - 1, (Road[0].y + Road[3].y) / 2);
    Canvas->LineTo((Road[1].x + Road[2].x) / 2 - 1, (Road[1].y + Road[2].y) / 2);
    Canvas->MoveTo((Road[0].x + Road[3].x) / 2 + 1, (Road[0].y + Road[3].y) / 2);
    Canvas->LineTo((Road[1].x + Road[2].x) / 2 + 1, (Road[1].y + Road[2].y) / 2);

    //нарисуем машину на дороге при помощи шрифта Webdings
    Canvas->Font->Color = clBlack; //буквы черного цвета
    Canvas->Brush->Style = bsClear; //фон под текстом не рисуется
    Canvas->Font->Size = 45;        //размер шрифта = 45 пунктов
    Canvas->Font->Name = "Webdings";//название шрифта
    //выведем английскую букву 'p', код которой соответствует  машине
    //в шрифте Webdings
    Canvas->TextOut(235, 250, 'p');

    //нарисуем собаку
    Canvas->Font->Size = 30; Canvas->TextOut(340, 320, 'х');
}
//---------------------------------------------------------------------------
